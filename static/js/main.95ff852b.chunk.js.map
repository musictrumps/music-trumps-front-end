{"version":3,"sources":["Home/HomeView.jsx","Services/Api/Base/useConfig.js","Services/Api/Base/BaseApi.js","Services/Api/Base/ApiErrorResponse.js","Services/Api/AccountApi.js","SignIn/SignInView.jsx","Routes/AppRoutes.js","AppMenu/TopMenuView.jsx","theme.js","App.js","serviceWorker.js","index.js","images/radio.png"],"names":["useStyles","makeStyles","theme","center","padding","spacing","textAlign","color","palette","text","secondary","firstRow","paddingTop","HomeView","classes","Container","component","Grid","container","className","item","xs","src","radioImage","alt","baseUrl","process","anonymous","timeout","baseURL","authenticated","headers","Authorization","_handleError","error","response","status","_post","url","data","axiosConfig","a","axios","post","_get","get","ApiRequests","ApiErrorResponse","message","this","errorCode","AccountApi","login","username","pwd","loginRequest","password","paper","marginTop","display","flexDirection","alignItems","avatar","margin","backgroundColor","main","form","width","submit","SignInView","useState","undefined","setUsername","setPassword","handleSignIn","event","preventDefault","console","log","maxWidth","Avatar","Typography","variant","noValidate","onSubmit","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","e","target","value","type","FormControlLabel","disabled","control","Checkbox","Button","Routes","exact","path","to","root","flexGrow","menuButton","marginRight","title","TopMenuView","AppBar","position","Toolbar","RouterLink","createMuiTheme","primary","500","App","ThemeProvider","CssBaseline","basename","AppRoutes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.95ff852b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Grid, Container} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport radioImage from '../images/radio.png';\r\nconst useStyles = makeStyles((theme) => ({\r\n  center: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  firstRow: {\r\n    paddingTop: '10em',\r\n  },\r\n}));\r\n\r\nconst HomeView = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container component=\"main\">\r\n      <Grid container spacing={3} className={[classes.center, classes.firstRow]}>\r\n        <Grid item xs></Grid>\r\n        <Grid item xs>\r\n          <img src={radioImage} alt=\"logo\" />\r\n        </Grid>\r\n        <Grid item xs></Grid>\r\n      </Grid>\r\n      <Grid container spacing={3} className={classes.center}>\r\n        <Grid item xs></Grid>\r\n        <Grid item xs={6}>\r\n          <h1>Music trumps</h1>\r\n        </Grid>\r\n        <Grid item xs></Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HomeView;\r\n","const baseUrl = process.env.REACT_APP_API_BASE_URL;\r\n\r\nconst anonymous = () => {\r\n  return {\r\n    timeout: 1500,\r\n    baseURL: baseUrl,\r\n  };\r\n};\r\n\r\nconst authenticated = () => {\r\n  const token = 'from cookies';\r\n  const header = {\r\n    Authorization: `bearer ${token}`,\r\n  };\r\n  return {\r\n    headers: header,\r\n    timeout: 1500,\r\n    baseURL: baseUrl,\r\n  };\r\n};\r\n\r\nexport {anonymous, authenticated};\r\n","import axios from 'axios';\r\nimport {anonymous, authenticated} from './useConfig';\r\n\r\nconst _handleError = (error) => {\r\n  if (error && error.response && error.response.status === 401) {\r\n    //redirect to 401\r\n  } else if (error && error.response && error.response.status === 403) {\r\n    // redirect to 403\r\n  } else {\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst _post = async (url, data, axiosConfig) => {\r\n  try {\r\n    const response = await axios.post(url, data, axiosConfig);\r\n    return response.data;\r\n  } catch (error) {\r\n    return _handleError(error);\r\n  }\r\n};\r\nconst _get = async (url, axiosConfig) => {\r\n  try {\r\n    const response = await axios.get(url, axiosConfig);\r\n    return response.data;\r\n  } catch (error) {\r\n    _handleError(error);\r\n  }\r\n};\r\nconst ApiRequests = {\r\n  anonymous: () => {\r\n    return {\r\n      get: async (url) => {\r\n        return await _get(url, anonymous());\r\n      },\r\n      post: async (url, data) => {\r\n        return await _post(url, data, anonymous());\r\n      },\r\n    };\r\n  },\r\n  authenticated: () => {\r\n    return {\r\n      get: async (url) => {\r\n        return await _get(url, authenticated());\r\n      },\r\n      post: async (url, data) => {\r\n        return await _post(url, data, authenticated());\r\n      },\r\n    };\r\n  },\r\n};\r\nexport default ApiRequests;\r\n","export default function ApiErrorResponse(error, message) {\r\n  this.error = true;\r\n  this.errorCode = error;\r\n  this.message = message;\r\n}\r\n","import ApiRequests from './Base/BaseApi';\r\nimport ApiErrorResponse from './Base/ApiErrorResponse';\r\nconst AccountApi = {\r\n  login: async (username, pwd) => {\r\n    let url = '/SignIn';\r\n    let loginRequest = {login: username, password: pwd};\r\n    try {\r\n      return await ApiRequests.anonymous().post(url, loginRequest);\r\n    } catch (e) {\r\n      return new ApiErrorResponse(e.response.status, e.response.data);\r\n    }\r\n  },\r\n};\r\nexport default AccountApi;\r\n","import React, {useState} from 'react';\r\nimport {Container, Avatar, Button, TextField, FormControlLabel, Checkbox, Grid, Typography} from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {AccountApi} from '../Services/Api';\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\nconst SignInView = () => {\r\n  const [username, setUsername] = useState(undefined);\r\n  const [password, setPassword] = useState(undefined);\r\n\r\n  const handleSignIn = async (event) => {\r\n    try {\r\n      event.preventDefault();\r\n\r\n      const response = await AccountApi.login(username, password);\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleSignIn}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <FormControlLabel disabled control={<Checkbox value=\"remember\" color=\"primary\" />} label=\"Remember me\" />\r\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <span variant=\"body2\">Forgot password?</span>\r\n            </Grid>\r\n            <Grid item>\r\n              <span variant=\"body2\">{\"Don't have an account? Sign Up\"}</span>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignInView;\r\n","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport HomeView from '../Home/HomeView';\r\nimport SignInView from '../SignIn/SignInView';\r\nconst Routes = () => (\r\n  <Switch>\r\n    <Route exact path=\"/\">\r\n      <Redirect to=\"/Home\" />\r\n    </Route>\r\n    <Route path=\"/Home\" component={HomeView} />\r\n    <Route path=\"/SignIn\" component={SignInView} />\r\n  </Switch>\r\n);\r\nexport default Routes;\r\n","import React from 'react';\r\nimport {AppBar, Toolbar, Typography, Button} from '@material-ui/core';\r\nimport {Link as RouterLink} from 'react-router-dom';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst TopMenuView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          Music trumps\r\n        </Typography>\r\n        <Button color=\"inherit\" component={RouterLink} to=\"/SignIn\">\r\n          SIgn In\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default TopMenuView;\r\n","import {createMuiTheme} from '@material-ui/core/styles';\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {500: '#467fcf'},\r\n  },\r\n});\r\nexport default theme;\r\n","import React from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport {CssBaseline} from '@material-ui/core';\nimport {AppRoutes} from './Routes';\nimport {TopMenuView} from './AppMenu';\nimport theme from './theme';\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router basename=\"/game\">\n        <TopMenuView />\n        <AppRoutes />\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log('New content is available and will be used when all  tabs for this page are closed. See https://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/radio.cb8552a2.png\";"],"sourceRoot":""}